from abc import ABC, abstractmethod
from typing import Any, Dict, List


class CVERepository(ABC):
    @abstractmethod
    def save(self, cve: Dict[str, Any]) -> None: ...

    @abstractmethod
    def find_all(self) -> List[Dict[str, Any]]: ...

    @abstractmethod
    def find_one(self, cve_id: str) -> Dict[str, Any]: ...

    @abstractmethod
    def update_reference_text(self, cve: Dict[str, Any]) -> None: ...

    @abstractmethod
    def update_exploit(self, cve: Dict[str, Any]) -> None: ...

    @abstractmethod
    def update_exploit_tag_generated(self, cve: Dict[str, Any]) -> None: ...
