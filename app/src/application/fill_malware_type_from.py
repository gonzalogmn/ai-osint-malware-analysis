import pandas as pd

from src.model.cve_repository import CVERepository


class FillMalwareTypeFrom:
    def __init__(
        self, input_repository: CVERepository, output_repository: CVERepository, from_column: str
    ):
        self._input_repository = input_repository
        self._output_repository = output_repository
        self._from_column = from_column

    def _determine_malware_type(self, row, column):
        # Example logic based on 'cve_id', 'date_published', and 'description'
        # This logic can be customized based on your specific needs

        if pd.isna(row[column]):
            return "unknown"
        description = row[column].lower()
        if "ransomware" in description or "encrypts" in description:
            return "ransomware"
        elif "trojan" in description:
            return "trojan"
        elif "worm" in description:
            return "worm"
        elif "spyware" in description:
            return "spyware"
        elif "virus" in description:
            return "virus"
        elif "phishing" in description:
            return "phishing"
        elif "rootkit" in description:
            return "rootkit"
        elif "backdoor" in description:
            return "backdoor"
        elif "adware" in description:
            return "adware"
        else:
            return "unknown"

    def __call__(self):
        documents = self._input_repository.find_all()

        df = pd.DataFrame(documents)

        df["malware_type"] = df.apply(
            lambda row: (
                self._determine_malware_type(row, self._from_column)
                if pd.isnull(row["malware_type"])
                else row["malware_type"]
            ),
            axis=1,
        )

        data_dict = df.to_dict("records")
        for cve in data_dict:
            self._output_repository.update(cve)
