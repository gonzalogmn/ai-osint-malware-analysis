from src.application.clean_input import CleanInput
from src.application.fill_malware_type_from import FillMalwareTypeFrom
from src.application.forecast_cves_by_malware_type import ForecastCVEsByMalwareType
from src.application.predict_malware_type_with_nlp import PredictMalwareTypeWithNLP
from src.application.read_input import ReadInput
from src.infrastructure.mongodb_cve_repository import MongoDBCVERepository

if __name__ == "__main__":
    COLLECTION_SUFFIX = "_20240810"
    CVES_RAW_COLLECTION = "cvs_raw" + COLLECTION_SUFFIX
    CVES_CLEAN_COLLECTION = "cves_clean" + COLLECTION_SUFFIX
    CVES_IT1_COLLECTION = "cves_it1" + COLLECTION_SUFFIX
    CVES_WITH_PREDICTED_MALWARE_TYPE_COLLECTION = (
        "cves_with_predicted_malware_type" + COLLECTION_SUFFIX
    )
    CVES_FORECAST_COLLECTION = "cves_forecast" + COLLECTION_SUFFIX

    cves_raw_repository = MongoDBCVERepository(collection_name=CVES_RAW_COLLECTION)
    cves_clean_repository = MongoDBCVERepository(collection_name=CVES_CLEAN_COLLECTION)
    cves_it1_repository = MongoDBCVERepository(collection_name=CVES_IT1_COLLECTION)
    cves_with_predicted_malware_type_repository = MongoDBCVERepository(
        collection_name=CVES_WITH_PREDICTED_MALWARE_TYPE_COLLECTION
    )
    cves_forecast_repository = MongoDBCVERepository(collection_name=CVES_FORECAST_COLLECTION)

    read_input = ReadInput(cves_raw_repository)
    clean_input = CleanInput(cves_raw_repository, cves_clean_repository)
    # extract_reference_text_from_reference_urls = ExtractReferenceTextFromReferenceURLs(
    #     cves_clean_repository, cves_clean_repository
    # )
    fill_malware_type_from_description = FillMalwareTypeFrom(
        cves_clean_repository, cves_it1_repository, "description"
    )
    # fill_malware_type_from_reference_text = FillMalwareTypeFrom(
    #     cves_it1_repository, cves_it2_repository, "reference_text"
    # )
    predict_malware_type_with_nlp = PredictMalwareTypeWithNLP(
        cves_it1_repository, cves_with_predicted_malware_type_repository
    )
    forecast_cves_by_malware_type = ForecastCVEsByMalwareType(
        cves_with_predicted_malware_type_repository, cves_forecast_repository
    )

    # read_input()
    # clean_input()
    # fill_malware_type_from_description()
    predict_malware_type_with_nlp()
    forecast_cves_by_malware_type()
