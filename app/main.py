import os

from src.application.clean_input import CleanInput
from src.application.extract_exploit import ExtractExploit
from src.application.fill_exploit_tag_from_text import FillExploitTagFromText
from src.application.predict_exploit_tag_with_nlp import PredictExploitTagWithNLP
from src.application.read_input import ReadInput
from src.infrastructure.mongodb_cve_repository import MongoDBCVERepository

COLLECTION_SUFFIX = os.getenv("REPOSITORY_DATA_SUFFIX")
CVES_RAW_COLLECTION = "cves_raw" + COLLECTION_SUFFIX
CVES_CLEAN_COLLECTION = "cves_clean" + COLLECTION_SUFFIX
CVES_WITH_EXPLOIT_TAG_COLLECTION = "cves_with_exploit_tag" + COLLECTION_SUFFIX
CVES_WITH_PREDICTED_EXPLOIT_TAG_COLLECTION = "cves_with_predicted_exploit_tag" + COLLECTION_SUFFIX

if __name__ == "__main__":
    cves_raw_repository = MongoDBCVERepository(collection_name=CVES_RAW_COLLECTION)
    cves_clean_repository = MongoDBCVERepository(collection_name=CVES_CLEAN_COLLECTION)
    cves_with_exploit_tag_repository = MongoDBCVERepository(
        collection_name=CVES_WITH_EXPLOIT_TAG_COLLECTION
    )
    cves_with_predicted_exploit_tag_repository = MongoDBCVERepository(
        collection_name=CVES_WITH_PREDICTED_EXPLOIT_TAG_COLLECTION
    )

    read_input = ReadInput(cves_raw_repository)
    clean_input = CleanInput(cves_raw_repository, cves_clean_repository)
    extract_exploit = ExtractExploit(
        cves_with_exploit_tag_repository, cves_with_exploit_tag_repository
    )
    fill_exploit_tag_from_text = FillExploitTagFromText(
        cves_with_exploit_tag_repository, cves_with_exploit_tag_repository
    )
    predict_exploit_tag_with_nlp = PredictExploitTagWithNLP(
        cves_with_exploit_tag_repository, cves_with_predicted_exploit_tag_repository
    )

    read_input()
    clean_input()
    extract_exploit()
    fill_exploit_tag_from_text()
    predict_exploit_tag_with_nlp()
